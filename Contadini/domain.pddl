(define (domain CAMPI)
    (:requirements :typing :equality :negative-preconditions :durative-actions)

    (:types 
        campo contadino trattore attrezzo
    )

    (:predicates 
        (CAMPO ?c - campo)
        (contadino ?cont - contadino)
        (TRA ?tra - trattore)
        (TRA-ARA ?tra - trattore)
        (TRA-SEMINA ?tra - trattore)
        (ARATRO ?a - attrezzo)
        (SEMINATORE ?s - attrezzo)
        (at ?o - (either contadino trattore attrezzo) ?c - campo)
        (CONNESSO ?c1 ?c2 - campo)
        (arato ?c - campo)
        (seminato ?c - campo)
        (innaffiato ?c - campo)
        (on ?cont - contadino ?tra - trattore)
        (attaccato ?attr - attrezzo ?tra - trattore)
        (hasAttrezzoAttaccato ?tra - trattore)
        (isAttaccato ?attr - attrezzo)
        (aBordo ?cont - contadino)
    )

    (:durative-action spostaContadino
        :parameters (?cont - contadino ?campocorrente ?camposuccessivo - campo)
        :duration (= ?duration 10)
        :condition (and 
            (at start (contadino ?cont))
            (at start (CAMPO ?campocorrente))
            (at start (CAMPO ?camposuccessivo))
            (at start (at ?cont ?campocorrente))
            (at start (CONNESSO ?campocorrente ?camposuccessivo)))
        :effect (and 
            (at end (at ?cont ?camposuccessivo))
            (at end (not (at ?cont ?campocorrente))))
    )

    (:durative-action spostaContadinoSulTrattore
        :parameters (?cont - contadino ?tra - trattore ?campocorrente ?camposuccessivo - campo)
        :duration (= ?duration 5)
        :condition (and 
            (at start (contadino ?cont))
            (at start (TRA ?tra))
            (at start (CAMPO ?campocorrente))
            (at start (CAMPO ?camposuccessivo))
            (at start (at ?cont ?campocorrente))
            (at start (at ?tra ?campocorrente))
            (at start (on ?cont ?tra))
            (at start (aBordo ?cont))
            (at start (CONNESSO ?campocorrente ?camposuccessivo))
            (at start (not (hasAttrezzoAttaccato ?tra))))
        :effect (and 
            (at end (at ?cont ?camposuccessivo))
            (at end (not (at ?cont ?campocorrente)))
            (at end (at ?tra ?camposuccessivo))
            (at end (not (at ?tra ?campocorrente))))
    )

    (:durative-action spostaDueContadiniSulTrattore
        :parameters (?cont1 ?cont2 - contadino ?tra - trattore ?campocorrente ?camposuccessivo - campo)
        :duration (= ?duration 5)
        :condition (and 
            (at start (contadino ?cont1))
            (at start (contadino ?cont2))
            (at start (TRA ?tra))
            (at start (CAMPO ?campocorrente))
            (at start (CAMPO ?camposuccessivo))
            (at start (at ?cont1 ?campocorrente))
            (at start (at ?cont2 ?campocorrente))
            (at start (at ?tra ?campocorrente))
            (at start (on ?cont1 ?tra))
            (at start (on ?cont2 ?tra))
            (at start (not (= ?cont1 ?cont2)))
            (at start (aBordo ?cont1))
            (at start (aBordo ?cont2))
            (at start (CONNESSO ?campocorrente ?camposuccessivo))
            (at start (not (hasAttrezzoAttaccato ?tra))))
        :effect (and 
            (at end (at ?cont1 ?camposuccessivo))
            (at end (not (at ?cont1 ?campocorrente)))
            (at end (at ?cont2 ?camposuccessivo))
            (at end (not (at ?cont2 ?campocorrente)))
            (at end (at ?tra ?camposuccessivo))
            (at end (not (at ?tra ?campocorrente))))
    )

    (:durative-action spostaContadinoSulTrattoreConAratro
        :parameters (?cont - contadino ?tra - trattore ?attr - attrezzo ?campocorrente ?camposuccessivo - campo)
        :duration (= ?duration 5)
        :condition (and 
            (at start (contadino ?cont))
            (at start (TRA ?tra))
            (at start (TRA-ARA ?tra))
            (at start (ARATRO ?attr))
            (at start (CAMPO ?campocorrente))
            (at start (CAMPO ?camposuccessivo))
            (at start (at ?cont ?campocorrente))
            (at start (at ?tra ?campocorrente))
            (at start (at ?attr ?campocorrente))
            (at start (isAttaccato ?attr))
            (at start (hasAttrezzoAttaccato ?tra))
            (at start (attaccato ?attr ?tra))
            (at start (on ?cont ?tra))
            (at start (aBordo ?cont))
            (at start (CONNESSO ?campocorrente ?camposuccessivo)))
        :effect (and 
            (at end (at ?cont ?camposuccessivo))
            (at end (not (at ?cont ?campocorrente)))
            (at end (at ?tra ?camposuccessivo))
            (at end (not (at ?tra ?campocorrente)))
            (at end (at ?attr ?camposuccessivo))
            (at end (not (at ?attr ?campocorrente))))
    )

    (:durative-action spostaDueContadiniSulTrattoreConAratro
        :parameters (?cont1 ?cont2 - contadino ?tra - trattore ?attr - attrezzo ?campocorrente ?camposuccessivo - campo)
        :duration (= ?duration 5)
        :condition (and 
            (at start (contadino ?cont1))
            (at start (contadino ?cont2))
            (at start (TRA ?tra))
            (at start (TRA-ARA ?tra))
            (at start (ARATRO ?attr))
            (at start (CAMPO ?campocorrente))
            (at start (CAMPO ?camposuccessivo))
            (at start (at ?cont1 ?campocorrente))
            (at start (at ?cont2 ?campocorrente))
            (at start (at ?tra ?campocorrente))
            (at start (at ?attr ?campocorrente))
            (at start (not (= ?cont1 ?cont2)))
            (at start (isAttaccato ?attr))
            (at start (hasAttrezzoAttaccato ?tra))
            (at start (attaccato ?attr ?tra))
            (at start (on ?cont1 ?tra))
            (at start (on ?cont2 ?tra))
            (at start (aBordo ?cont1))
            (at start (aBordo ?cont2))
            (at start (CONNESSO ?campocorrente ?camposuccessivo)))
        :effect (and 
            (at end (at ?cont1 ?camposuccessivo))
            (at end (not (at ?cont1 ?campocorrente)))
            (at end (at ?cont2 ?camposuccessivo))
            (at end (not (at ?cont2 ?campocorrente)))
            (at end (at ?tra ?camposuccessivo))
            (at end (not (at ?tra ?campocorrente)))
            (at end (at ?attr ?camposuccessivo))
            (at end (not (at ?attr ?campocorrente))))
    )

    (:durative-action spostaContadinoSulTrattoreConSeminatore
        :parameters (?cont - contadino ?tra - trattore ?attr - attrezzo ?campocorrente ?camposuccessivo - campo)
        :duration (= ?duration 5)
        :condition (and 
            (at start (contadino ?cont))
            (at start (TRA ?tra))
            (at start (TRA-SEMINA ?tra))
            (at start (SEMINATORE ?attr))
            (at start (CAMPO ?campocorrente))
            (at start (CAMPO ?camposuccessivo))
            (

at start (at ?cont ?campocorrente))
            (at start (at ?tra ?campocorrente))
            (at start (at ?attr ?campocorrente))
            (at start (isAttaccato ?attr))
            (at start (hasAttrezzoAttaccato ?tra))
            (at start (attaccato ?attr ?tra))
            (at start (on ?cont ?tra))
            (at start (aBordo ?cont))
            (at start (CONNESSO ?campocorrente ?camposuccessivo)))
        :effect (and 
            (at end (at ?cont ?camposuccessivo))
            (at end (not (at ?cont ?campocorrente)))
            (at end (at ?tra ?camposuccessivo))
            (at end (not (at ?tra ?campocorrente)))
            (at end (at ?attr ?camposuccessivo))
            (at end (not (at ?attr ?campocorrente))))
    )

    (:durative-action spostaDueContadiniSulTrattoreConSeminatore
        :parameters (?cont1 ?cont2 - contadino ?tra - trattore ?attr - attrezzo ?campocorrente ?camposuccessivo - campo)
        :duration (= ?duration 5)
        :condition (and 
            (at start (contadino ?cont1))
            (at start (contadino ?cont2))
            (at start (TRA ?tra))
            (at start (TRA-SEMINA ?tra))
            (at start (SEMINATORE ?attr))
            (at start (CAMPO ?campocorrente))
            (at start (CAMPO ?camposuccessivo))
            (at start (at ?cont1 ?campocorrente))
            (at start (at ?cont2 ?campocorrente))
            (at start (at ?tra ?campocorrente))
            (at start (at ?attr ?campocorrente))
            (at start (not (= ?cont1 ?cont2)))
            (at start (isAttaccato ?attr))
            (at start (hasAttrezzoAttaccato ?tra))
            (at start (attaccato ?attr ?tra))
            (at start (on ?cont1 ?tra))
            (at start (on ?cont2 ?tra))
            (at start (aBordo ?cont1))
            (at start (aBordo ?cont2))
            (at start (CONNESSO ?campocorrente ?camposuccessivo)))
        :effect (and 
            (at end (at ?cont1 ?camposuccessivo))
            (at end (not (at ?cont1 ?campocorrente)))
            (at end (at ?cont2 ?camposuccessivo))
            (at end (not (at ?cont2 ?campocorrente)))
            (at end (at ?tra ?camposuccessivo))
            (at end (not (at ?tra ?campocorrente)))
            (at end (at ?attr ?camposuccessivo))
            (at end (not (at ?attr ?campocorrente))))
    )

    (:durative-action attaccaAttrezzo
        :parameters (?cont - contadino ?tra - trattore ?attr - attrezzo ?campo - campo)
        :duration (= ?duration 5)
        :condition (and 
            (at start (contadino ?cont))
            (at start (TRA ?tra))
            (at start (at ?cont ?campo))
            (at start (at ?tra ?campo))
            (at start (at ?attr ?campo))
            (at start (not (hasAttrezzoAttaccato ?tra)))
            (at start (not (isAttaccato ?attr)))
            (at start (not (attaccato ?attr ?tra)))
            (at start (aBordo ?cont)))
        :effect (and 
            (at end (attaccato ?attr ?tra))
            (at end (hasAttrezzoAttaccato ?tra))
            (at end (isAttaccato ?attr)))
    )

    (:durative-action staccaAttrezzo
        :parameters (?cont - contadino ?tra - trattore ?attr - attrezzo ?campo - campo)
        :duration (= ?duration 5)
        :condition (and 
            (at start (contadino ?cont))
            (at start (TRA ?tra))
            (at start (at ?cont ?campo))
            (at start (at ?tra ?campo))
            (at start (at ?attr ?campo))
            (at start (isAttaccato ?attr))
            (at start (hasAttrezzoAttaccato ?tra))
            (at start (attaccato ?attr ?tra))
            (at start (aBordo ?cont)))
        :effect (and 
            (at end (not (attaccato ?attr ?tra)))
            (at end (not (hasAttrezzoAttaccato ?tra)))
            (at end (not (isAttaccato ?attr))))
    )

    (:durative-action ara
        :parameters (?cont - contadino ?tra - trattore ?attr - attrezzo ?campo - campo)
        :duration (= ?duration 60)
        :condition (and 
            (at start (contadino ?cont))
            (at start (TRA ?tra))
            (at start (TRA-ARA ?tra))
            (at start (ARATRO ?attr))
            (at start (at ?cont ?campo))
            (at start (at ?tra ?campo))
            (at start (at ?attr ?campo))
            (at start (isAttaccato ?attr))
            (at start (attaccato ?attr ?tra))
            (at start (aBordo ?cont)))
        :effect (at end (arato ?campo))
    )

    (:durative-action semina
        :parameters (?cont - contadino ?tra - trattore ?attr - attrezzo ?campo - campo)
        :duration (= ?duration 50)
        :condition (and 
            (at start (contadino ?cont))
            (at start (TRA ?tra))
            (at start (TRA-SEMINA ?tra))
            (at start (SEMINATORE ?attr))
            (at start (arato ?campo))
            (at start (at ?cont ?campo))
            (at start (at ?tra ?campo))
            (at start (at ?attr ?campo))
            (at start (isAttaccato ?attr))
            (at start (attaccato ?attr ?tra))
            (at start (aBordo ?cont)))
        :effect (at end (seminato ?campo))
    )

    (:durative-action innaffia
        :parameters (?cont - contadino ?campo - campo)
        :duration (= ?duration 30)
        :condition (and 
            (at start (contadino ?cont))
            (at start (at ?cont ?campo))
            (at start (seminato ?campo)))
        :effect (at end (innaffiato ?campo))
    )
)